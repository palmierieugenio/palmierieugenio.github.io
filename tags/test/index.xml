<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test on Titolo Blog</title>
    <link>/./tags/test/</link>
    <description>Recent content in Test on Titolo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Eugenio Palmieri</copyright>
    <lastBuildDate>Tue, 22 Aug 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/test/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>provaEU</title>
      <link>/./post/provaeu/</link>
      <pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/./post/provaeu/</guid>
      <description>&lt;script src=&#34;/././rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/././rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/././rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/././rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/././rmarkdown-libs/leaflet-label/leaflet.label.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/././rmarkdown-libs/leaflet-label/leaflet.label.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/leaflet-providers/leaflet-providers.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/././rmarkdown-libs/leaflet-providers-plugin/leaflet-providers-plugin.js&#34;&gt;&lt;/script&gt;


&lt;p&gtlt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Example of code highlighting
input_string_var = input(&amp;quot;Enter some data: &amp;quot;)
print(&amp;quot;You entered: {}&amp;quot;.format(input_string_var))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pacchetti:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;ggplot2&amp;quot;)
library(&amp;quot;plotly&amp;quot;)
library(&amp;quot;CatterPlots&amp;quot;)
library(&amp;quot;dplyr&amp;quot;)
library(&amp;quot;sp&amp;quot;)
library(&amp;quot;rgeos&amp;quot;)
library(&amp;quot;leaflet&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esempio Mappa:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Background 1: NASA
m=leaflet() %&amp;gt;% addTiles() %&amp;gt;% setView( lng = 2.34, lat = 48.85, zoom = 5 ) %&amp;gt;% addProviderTiles(&amp;quot;NASAGIBS.ViirsEarthAtNight2012&amp;quot;)
m&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;maxNativeZoom&#34;:null,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;continuousWorld&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:null,&#34;unloadInvisibleTiles&#34;:null,&#34;updateWhenIdle&#34;:null,&#34;detectRetina&#34;:false,&#34;reuseTiles&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addProviderTiles&#34;,&#34;args&#34;:[&#34;NASAGIBS.ViirsEarthAtNight2012&#34;,null,null,{&#34;errorTileUrl&#34;:&#34;&#34;,&#34;noWrap&#34;:false,&#34;zIndex&#34;:null,&#34;unloadInvisibleTiles&#34;:null,&#34;updateWhenIdle&#34;:null,&#34;detectRetina&#34;:false,&#34;reuseTiles&#34;:false}]}],&#34;setView&#34;:[[48.85,2.34],5,[]]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Esempi grafici:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Get the data from the web !
CC &amp;lt;- read.table(&amp;quot;http://www.sr.bham.ac.uk/~ajrs/papers/sanderson06/mean_Tprofile-CC.txt&amp;quot; ,  header=TRUE)
nCC &amp;lt;- read.table(&amp;quot;http://www.sr.bham.ac.uk/~ajrs/papers/sanderson06/mean_Tprofile-nCC.txt&amp;quot; , header=TRUE)
CC$type &amp;lt;- &amp;quot;Cool core&amp;quot;
nCC$type &amp;lt;- &amp;quot;Non-cool core&amp;quot;
A &amp;lt;- rbind(CC, nCC)
 
 
# Make the plot
ggplot(data=A, aes(x=r.r500, y=sckT, ymin=sckT.lo, ymax=sckT.up, fill=type, linetype=type)) + 
 geom_line() + 
 geom_ribbon(alpha=0.5) + 
 scale_x_log10() + 
 scale_y_log10() + 
 xlab(as.expression(expression( paste(&amp;quot;Radius (&amp;quot;, R[500], &amp;quot;)&amp;quot;) ))) + 
 ylab(&amp;quot;Scaled Temperature&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/././post/2017-08-22-provaeu_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Grafici:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Funs --------------------------------------------------------------------
 
coord_circle &amp;lt;- function(centre = c(0, 0), r = 1, n = 1000) {
  data_frame(
    x = seq(from = 0 - r, to = 0 + r, length.out = n %/% 2),
    y = sqrt(r^2 - x^2)
  ) %&amp;gt;% bind_rows(., -.) %&amp;gt;%
    mutate(x = x + centre[1], y = y + centre[2])
}
 
 
create_poly &amp;lt;- function(...) {
  args &amp;lt;- list(...)
  SpatialPolygons(
    lapply(
      X = seq_along(args),
      FUN = function(x) {
        Polygons(list(Polygon(as.data.frame(args[[x]]))), names(args)[x])
      }
    )
  )
}
 
 
echancrure &amp;lt;- function(to_var, by_var, p = 0.1) {
  ind &amp;lt;- which(by_var &amp;gt;= -0.08 &amp;amp; by_var &amp;lt;= 0.08 &amp;amp; to_var &amp;gt; 0)
  to_var[ind] &amp;lt;- to_var[ind] - p
  ind &amp;lt;- which(by_var &amp;gt;= -0.08 &amp;amp; by_var &amp;lt;= 0.08 &amp;amp; to_var &amp;lt; 0)
  to_var[ind] &amp;lt;- to_var[ind] + p
  return(to_var)
}
 
 
 
# BB-8 geometries ---------------------------------------------------------
 
 
# droid_body -------------------------------------------------------------------
 
# shape of the droid_body : two circles and a vertical line
droid_body &amp;lt;- coord_circle(centre = c(0, 0), r = 1)
droid_body$xvert &amp;lt;- 0
droid_body$yvert &amp;lt;- droid_body$x
droid_body &amp;lt;- bind_cols(
  droid_body,
  coord_circle(centre = c(0, 0), r = 0.35, n = nrow(droid_body)) %&amp;gt;% select(xint = x, yint = y)
)
 
# grey shapes in the central inner circle
droid_body_rect &amp;lt;- data_frame(
  x = c(-0.5, 0.5, 0.5, -0.5, c(-0.5, 0.5, 0.5, -0.5) - 0.2, c(-0.5, 0.5, 0.5, -0.5) + 0.2),
  y = c(-0.6, 0.4, 0.6, -0.4, c(-0.6, 0.4, 0.6, -0.4) + 0.2, c(-0.6, 0.4, 0.6, -0.4) - 0.2),
  group = rep(1:3, each = 4)
)
# a polygon for calculate the intersection between the grey shapes and the inner circle
polyrect &amp;lt;- create_poly(
  &amp;quot;polyrect1&amp;quot; = droid_body_rect[droid_body_rect$group == 1, 1:2],
  &amp;quot;polyrect2&amp;quot; = droid_body_rect[droid_body_rect$group == 2, 1:2],
  &amp;quot;polyrect3&amp;quot; = droid_body_rect[droid_body_rect$group == 3, 1:2]
)
 
polycircle &amp;lt;- create_poly(
  &amp;quot;polycircle&amp;quot; = droid_body[, c(&amp;quot;xint&amp;quot;, &amp;quot;yint&amp;quot;)]
)
# plot(polyrect); plot(polycircle, add = TRUE)
polyrect &amp;lt;- gIntersection(spgeom1 = polyrect, spgeom2 = polycircle)
# plot(polyrect); plot(polycircle, add = TRUE)
 
# fortify the polygon for ggplot
droid_body_rect &amp;lt;- fortify(polyrect)
 
 
# Central ring (orange)
ring &amp;lt;- coord_circle(centre = c(0, 0), r = 0.4)
ring$y &amp;lt;- echancrure(to_var = ring$y, by_var = ring$x, p = 0.1)
ring$x &amp;lt;- echancrure(to_var = ring$x, by_var = ring$y, p = 0.1)
ring &amp;lt;- bind_rows(
  ring %&amp;gt;% mutate(group = (x &amp;gt;= 0) * 1),
  coord_circle(centre = c(0, 0), r = 0.55, n = nrow(ring)) %&amp;gt;% mutate(y = -y, group = (x &amp;gt;= 0) * 1)
) %&amp;gt;%
  filter(group == 1) # oups something went wrong
ring &amp;lt;- bind_rows(ring, ring %&amp;gt;% mutate(x = -x, group = 2))
 
 
 
 
# ring left and right
# we make a copy of the right part of the central ring
ring_left &amp;lt;- ring %&amp;gt;% filter(group == 1)
# and we shift the ring center
ring_left$x &amp;lt;- ring_left$x - 1.3
 
# the same ...
ring_right &amp;lt;- ring %&amp;gt;% filter(group == 2)
ring_right$x &amp;lt;- ring_right$x + 1.3
 
# we creta a polygon for the intersection with the droid_body circle
polyring &amp;lt;- create_poly(
  &amp;quot;polyring_g&amp;quot; = ring_left[, c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)],
  &amp;quot;polyring_d&amp;quot; = ring_right[, c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)]
)
 
polydroid_body &amp;lt;- create_poly(&amp;quot;polydroid_body&amp;quot; = droid_body[, c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)])
 
# plot(polyring); plot(polydroid_body, add = TRUE)
 
polyring &amp;lt;- gIntersection(spgeom1 = polyring, spgeom2 = polydroid_body)
fort_ring &amp;lt;- fortify(polyring)
 
 
# the horizontal line of the body (in two parts)
ligne_hori &amp;lt;- data_frame(
  x = c(-1, range(ring$x), 1),
  y = 0,
  group = c(1, 1, 2, 2)
)
 
 
# droid head --------------------------------------------------------------------
 
droid_head &amp;lt;- coord_circle(centre = c(0, 1.02), r = 0.52) %&amp;gt;%
  filter(y &amp;gt;= 1.02) %&amp;gt;%
  mutate(group = 1, fill = &amp;quot;white&amp;quot;, col= &amp;quot;black&amp;quot;) %&amp;gt;%
  bind_rows(
    data_frame(
      x = c(-0.52, -0.4, 0.4, 0.52),
      y = c(1.02, 0.95, 0.95, 1.02),
      group = 2, fill = &amp;quot;white&amp;quot;, col= &amp;quot;black&amp;quot;
    )
  )
 
 
 
# Grey bars in droid&amp;#39;s head
poly_head_grey &amp;lt;- create_poly(
  &amp;quot;poly_head_grey_haut&amp;quot; = data_frame(
    x = c(-0.52, 0.52, 0.52, -0.52),
    y = c(1.44, 1.44, 1.51, 1.51)
  ),
  &amp;quot;poly_head_grey_bas&amp;quot; = data_frame(
    x = c(-0.52, 0.52, 0.52, -0.52),
    y = c(1.02, 1.02, 1.07, 1.07)
  )
)
 
polydroid_head &amp;lt;- create_poly(&amp;quot;polydroid_head&amp;quot; = droid_head[droid_head$group == 1, c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)])
 
poly_head_grey &amp;lt;- gIntersection(spgeom1 = poly_head_grey, spgeom2 = polydroid_head)
fort_droid_headrectgris &amp;lt;- fortify(poly_head_grey)
 
 
 
# orange bars
poly_head_orange &amp;lt;- create_poly(
  &amp;quot;poly_head_orange1&amp;quot; = data_frame(
    x = c(-0.52, 0.52, 0.52, -0.52),
    y = c(1.38, 1.38, 1.42, 1.42)
  ),
  &amp;quot;poly_head_orange2&amp;quot; = data_frame(
    x = c(-0.35, -0.35, -0.2, -0.2),
    y = c(1.07, 1.15, 1.15, 1.07)
  ),
  &amp;quot;poly_head_orange3&amp;quot; = data_frame(
    x = c(-0.55, -0.55, -0.45, -0.45),
    y = c(1.07, 1.15, 1.15, 1.07)
  ),
  &amp;quot;poly_head_orange4&amp;quot; = data_frame(
    x = c(0.44, 0.44, 0.47, 0.47),
    y = c(1.07, 1.15, 1.15, 1.07)
  )
)
 
poly_head_orange &amp;lt;- gIntersection(spgeom1 = poly_head_orange, spgeom2 = polydroid_head)
fort_droid_headrectorange &amp;lt;- fortify(poly_head_orange)
 
 
polygones_droid_head &amp;lt;- bind_rows(
  fort_droid_headrectgris %&amp;gt;% select(-piece) %&amp;gt;%
    mutate(group = as.numeric(as.character(group)), fill = &amp;quot;#8E8E9C&amp;quot;, col= &amp;quot;black&amp;quot;),
  fort_droid_headrectorange %&amp;gt;% select(-piece) %&amp;gt;% 
    mutate(group = as.numeric(as.character(group)) * 2, fill = &amp;quot;#DF8D5D&amp;quot;, col= &amp;quot;black&amp;quot;)
)
 
 
# Eyes
droid_eyes &amp;lt;- bind_rows(
  coord_circle(centre = c(0, 1.35), r = 0.14) %&amp;gt;% mutate(group = 1, fill = &amp;quot;white&amp;quot;, col = &amp;quot;white&amp;quot;),
  coord_circle(centre = c(0, 1.35), r = 0.12) %&amp;gt;% mutate(group = 2, fill = &amp;quot;white&amp;quot;, col = &amp;quot;black&amp;quot;),
  coord_circle(centre = c(0, 1.35), r = 0.10) %&amp;gt;% mutate(group = 3, fill = &amp;quot;grey40&amp;quot;, col = &amp;quot;grey40&amp;quot;),
  coord_circle(centre = c(0, 1.35), r = 0.08) %&amp;gt;% mutate(group = 4, fill = &amp;quot;black&amp;quot;, col = &amp;quot;black&amp;quot;),
  coord_circle(centre = c(0, 1.16), r = 0.04) %&amp;gt;% mutate(group = 5, fill = &amp;quot;#76B1DE&amp;quot;, col = &amp;quot;black&amp;quot;),
  coord_circle(centre = c(0.25, 1.20), r = 0.08) %&amp;gt;% mutate(group = 6, fill = &amp;quot;black&amp;quot;, col = &amp;quot;black&amp;quot;),
  coord_circle(centre = c(0.25, 1.20), r = 0.07) %&amp;gt;% mutate(group = 7, fill = &amp;quot;white&amp;quot;, col = &amp;quot;black&amp;quot;),
  coord_circle(centre = c(0.25, 1.20), r = 0.06) %&amp;gt;% mutate(group = 8, fill = &amp;quot;grey40&amp;quot;, col = &amp;quot;grey40&amp;quot;),
  coord_circle(centre = c(0.25, 1.20), r = 0.04) %&amp;gt;% mutate(group = 9, fill = &amp;quot;black&amp;quot;, col = &amp;quot;black&amp;quot;)
)
 
eye_line &amp;lt;- data_frame(
  x = 0,
  y = c(1.07, 1.16-0.04)
)
 
# Antennas
antennas &amp;lt;- data_frame(
  x = c(0.01, 0.01, 0.10, 0.10),
  y = c(sqrt(0.52^2 - 0.01^2) + 1.02, sqrt(0.52^2 - 0.01^2) + 1.02 + 0.15,
        sqrt(0.52^2 - 0.1^2) + 1.02, sqrt(0.52^2 - 0.1^2) + 1.02 + 0.25),
  group = c(1, 1, 2, 2)
)
 
 
# bb-8/ggplot2 ------------------------------------------------------------
 
bb8 &amp;lt;- ggplot(data = droid_body) +
  coord_fixed() +
  geom_polygon(mapping = aes(x = x, y = y), fill = &amp;quot;white&amp;quot;, col = &amp;quot;black&amp;quot;) +
  geom_polygon(data = droid_body_rect, mapping = aes(x = long, y = lat, group = group), fill = &amp;quot;#8E8E9C&amp;quot;) +
  geom_path(mapping = aes(x = xvert, y = yvert)) +
  geom_path(mapping = aes(x = xint, y = yint)) +
  geom_polygon(data = ring, mapping = aes(x = x, y = y, group = group), fill = &amp;quot;#DF8D5D&amp;quot;, col = &amp;quot;#DF8D5D&amp;quot;) +
  geom_path(data = ligne_hori, mapping = aes(x = x, y = y, group = group)) +
  geom_polygon(data = fort_ring , mapping = aes(x = long, y = lat, group = group), fill = &amp;quot;#DF8D5D&amp;quot;) +
  geom_polygon(data = droid_head, mapping = aes(x = x, y = y, group = group, fill = fill, col = col)) +
  geom_polygon(data = polygones_droid_head, mapping = aes(x = long, y = lat, group = group, fill = fill, col = col)) +
  geom_polygon(data = droid_eyes, mapping = aes(x = x, y = y, group = group, fill = fill, col = col)) +
  scale_fill_identity() + scale_color_identity() +
  geom_line(data = eye_line, mapping = aes(x = x, y = y)) +
  geom_line(data = antennas, mapping = aes(x = x, y = y, group = group), col = &amp;quot;black&amp;quot;)
 
 
bb8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/././post/2017-08-22-provaeu_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# or
bb8 + theme_void()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/././post/2017-08-22-provaeu_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + 
    geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/././post/2017-08-22-provaeu_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- -10:10
y &amp;lt;- -x^2 + 10
meow &amp;lt;- multicat(xs=x, ys=rnorm(21),
                 cat=c(1,2,3,4,5,6,7,8,9,10),
                 catcolor=list(c(0,0,0,1)),
                 canvas=c(-0.1,1.1, -0.1, 1.1),
                 xlab=&amp;quot;some cats&amp;quot;, ylab=&amp;quot;other cats&amp;quot;, main=&amp;quot;Random Cats&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/././post/2017-08-22-provaeu_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
